import { QLDBSession } from "aws-sdk";
import { ClientConfiguration } from "aws-sdk/clients/qldbsession";
import { QldbSession } from "./QldbSession";
/**
 * Represents a factory for creating sessions to a specific ledger within QLDB. This class or
 * {@linkcode PooledQldbDriver} should be the main entry points to any interaction with QLDB.
 * {@linkcode QldbDriver.getSession} will create a {@linkcode QldbSession} to the specified edger within QLDB as a
 * communication channel. Any sessions acquired should be cleaned up with {@linkcode QldbSession.close} to free up
 * resources.
 *
 * This factory does not attempt to re-use or manage sessions in any way. It is recommended to use
 * {@linkcode PooledQldbDriver} for both less resource usage and lower latency.
 */
export declare class QldbDriver {
    protected _qldbClient: QLDBSession;
    protected _ledgerName: string;
    protected _retryLimit: number;
    protected _isClosed: boolean;
    /**
     * Creates a QldbDriver.
     * @param qldbClientOptions The object containing options for configuring the low level client.
     *                          See {@link https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/QLDBSession.html#constructor-details|Low Level Client Constructor}.
     * @param ledgerName The QLDB ledger name.
     * @param retryLimit The number of automatic retries for statement executions using convenience methods on sessions
                         when an OCC conflict or retriable exception occurs. This value must not be negative.
     * @throws RangeError if `retryLimit` is less than 0.
     */
    constructor(ledgerName: string, qldbClientOptions?: ClientConfiguration, retryLimit?: number);
    /**
     * Close this driver.
     */
    close(): void;
    /**
     * Create and return a newly instantiated QldbSession object. This will implicitly start a new session with QLDB.
     * @returns Promise which fulfills with a QldbSession.
     * @throws {@linkcode DriverClosedError} when this driver is closed.
     */
    getSession(): Promise<QldbSession>;
}
