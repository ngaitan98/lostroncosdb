/// <reference types="node" />
import { Page } from "aws-sdk/clients/qldbsession";
import { Readable } from "stream";
import { Communicator } from "./Communicator";
/**
 * A class representing the result of a statement returned from QLDB as a stream.
 * Extends Readable from the Node.JS Stream API interface.
 * The stream will always operate in object mode.
 */
export declare class ResultStream extends Readable {
    private _communicator;
    private _cachedPage;
    private _txnId;
    private _shouldPushCachedPage;
    private _lastRetrievedIndex;
    private _isClosed;
    private _lock;
    /**
     * Create a ResultStream.
     * @param txnId The ID of the transaction the statement was executed in.
     * @param firstPage The initial page returned from the statement execution.
     * @param communicator The Communicator used for the statement execution.
     */
    constructor(txnId: string, firstPage: Page, communicator: Communicator);
    /**
     * Close this ResultStream.
     */
    close(): void;
    /**
     * Implementation of the `readable.read` method for the Node Streams Readable Interface.
     * @param size The number of bytes to read asynchronously. This is currently not being used as only object mode is
     * supported.
     * @throws {@linkcode ClientException} when this ResultStream is closed.
     */
    _read(size?: number): void;
    /**
     * Pushes the values for the Node Streams Readable Interface. This method fetches the next page if is required and
     * handles converting the values returned from QLDB into a Reader.
     * @returns Promise which fulfills with void.
     */
    private _pushPageValues;
}
