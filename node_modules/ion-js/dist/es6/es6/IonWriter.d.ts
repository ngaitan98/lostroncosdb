import { Decimal } from "./IonDecimal";
import { IonType } from "./IonType";
import { Reader } from "./IonReader";
import { Timestamp } from "./IonTimestamp";
import JSBI from "jsbi";
export interface Writer {
    writeNull(type: IonType): void;
    writeBoolean(value: boolean | null): void;
    writeInt(value: number | JSBI | null): void;
    writeFloat32(value: number | null): void;
    writeFloat64(value: number | null): void;
    writeDecimal(value: Decimal | null): void;
    writeTimestamp(value: Timestamp | null): void;
    writeString(value: string | null): void;
    writeSymbol(value: string | null): void;
    writeBlob(value: Uint8Array | null): void;
    writeClob(value: Uint8Array | null): void;
    writeValue(reader: Reader): void;
    writeValues(reader: Reader): void;
    writeFieldName(fieldName: string): void;
    stepIn(type: IonType): void;
    stepOut(): void;
    addAnnotation(annotation: string): void;
    setAnnotations(annotations: string[]): void;
    close(): void;
    getBytes(): Uint8Array;
    depth(): number;
}
