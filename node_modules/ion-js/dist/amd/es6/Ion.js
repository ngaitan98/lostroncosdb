var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
define(["require", "exports", "./IonBinaryReader", "./IonConstants", "./IonSpan", "./IonTextReader", "./IonTextWriter", "./IonPrettyTextWriter", "./IonWriteable", "./IonBinaryWriter", "./IonLocalSymbolTable", "./IonUnicode", "./IntSize", "./IonCatalog", "./IonDecimal", "./IonLocalSymbolTable", "./IonType", "./IonTypes", "./IonSharedSymbolTable", "./IonTimestamp", "./IonText", "./IonUnicode"], function (require, exports, IonBinaryReader_1, IonConstants_1, IonSpan_1, IonTextReader_1, IonTextWriter_1, IonPrettyTextWriter_1, IonWriteable_1, IonBinaryWriter_1, IonLocalSymbolTable_1, IonUnicode_1, IntSize_1, IonCatalog_1, IonDecimal_1, IonLocalSymbolTable_2, IonType_1, IonTypes_1, IonSharedSymbolTable_1, IonTimestamp_1, IonText_1, IonUnicode_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    IntSize_1 = __importDefault(IntSize_1);
    exports.IntSize = IntSize_1.default;
    function isBinary(buffer) {
        if (buffer.length < 4) {
            return false;
        }
        for (let i = 0; i < 4; i++) {
            if (buffer[i] !== IonConstants_1.IVM.binary[i])
                return false;
        }
        return true;
    }
    function makeReader(buf) {
        const catalog = null;
        if ((typeof buf) === "string") {
            return new IonTextReader_1.TextReader(new IonSpan_1.StringSpan(buf), catalog);
        }
        const bufArray = new Uint8Array(buf);
        if (isBinary(bufArray)) {
            return new IonBinaryReader_1.BinaryReader(new IonSpan_1.BinarySpan(bufArray), catalog);
        }
        else {
            return new IonTextReader_1.TextReader(new IonSpan_1.StringSpan(IonUnicode_1.decodeUtf8(bufArray)), catalog);
        }
    }
    exports.makeReader = makeReader;
    function makeTextWriter() {
        return new IonTextWriter_1.TextWriter(new IonWriteable_1.Writeable());
    }
    exports.makeTextWriter = makeTextWriter;
    function makePrettyWriter(indentSize) {
        return new IonPrettyTextWriter_1.PrettyTextWriter(new IonWriteable_1.Writeable(), indentSize);
    }
    exports.makePrettyWriter = makePrettyWriter;
    function makeBinaryWriter() {
        const localSymbolTable = IonLocalSymbolTable_1.defaultLocalSymbolTable();
        return new IonBinaryWriter_1.BinaryWriter(localSymbolTable, new IonWriteable_1.Writeable());
    }
    exports.makeBinaryWriter = makeBinaryWriter;
    exports.Catalog = IonCatalog_1.Catalog;
    exports.Decimal = IonDecimal_1.Decimal;
    exports.defaultLocalSymbolTable = IonLocalSymbolTable_2.defaultLocalSymbolTable;
    exports.IonType = IonType_1.IonType;
    exports.IonTypes = IonTypes_1.IonTypes;
    exports.SharedSymbolTable = IonSharedSymbolTable_1.SharedSymbolTable;
    exports.TimestampPrecision = IonTimestamp_1.TimestampPrecision;
    exports.Timestamp = IonTimestamp_1.Timestamp;
    exports.toBase64 = IonText_1.toBase64;
    exports.decodeUtf8 = IonUnicode_2.decodeUtf8;
});
//# sourceMappingURL=Ion.js.map